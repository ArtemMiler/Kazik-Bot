from aiogram import Router
from aiogram.filters import Command
from aiogram.types import CallbackQuery, Message

from Database import get_user_data, add_user_data, update_message_id
from ..Keyboards.all_keyboards import game_keyboard, start_keyboard
from ..print_functions import send_game

router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message):
    main_slot_id = await check_user_in_db(message)
    if message.chat.type == "private":
        if main_slot_id:
            try:
                await message.bot.delete_message(chat_id=message.chat.id, message_id=main_slot_id)
            except Exception as e:
                print(f"Error deleting message: {e}")

        await message.answer(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–≥—Ä—ã:",
            reply_markup=start_keyboard
        )
    else:
        await send_game(message, game_keyboard)


async def check_user_in_db(message):
    user_data = await get_user_data(message.chat.id)
    if not user_data:
        await add_user_data(message.chat.id)
        user_data = await get_user_data(message.chat.id)

    if not user_data.main_message_id:
        await update_message_id(message.chat.id, message.message_id)

    return user_data.main_message_id


@router.callback_query(lambda callback: callback.data == "real_button")
async def real_button_handler(callback_query: CallbackQuery):
    if callback_query.message.chat.type == "private":
        await callback_query.answer(
            "–†–µ–∂–∏–º –∏–≥—Ä—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
            show_alert=True
        )
    else:
        await callback_query.answer(
            "–†–µ–∂–∏–º –∏–≥—Ä—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –≥—Ä—É–ø–ø–∞—Ö",
            show_alert=True
        )


@router.callback_query(lambda callback: callback.data == "demo_button")
async def demo_button_handler(callback_query: CallbackQuery):
    await callback_query.message.delete()
    await send_game(callback_query.message, game_keyboard)
    await callback_query.answer()


@router.message(Command("help"))
async def cmd_help(message):
    await message.answer(
        "üÉè<b>JOKER CASINO</b>üÉè –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–µ–∂–∏–º –∏–≥—Ä—ã —Ç–æ–ª—å–∫–æ —Å –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç–æ–π\n\n"
        "–î–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –Ω–∞–∂–º–∏—Ç–µ <b>/start</b>\n"
        "(<i>–í –≥—Ä—É–ø–ø–∞—Ö –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–µ–º–æ-—Å—á–µ—Ç</i>)\n\n"
        "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –¥–ª—è –∏–≥—Ä—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–≥—Ä—ã\n"
        "–ò–≥—Ä–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –ø–æ–ª–µ 3 x 5, –∫–æ—Ç–æ—Ä–æ–µ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è 11 —Å–∏–º–≤–æ–ª–∞–º–∏.\n"
        "–í–æ—Ç –æ–Ω–∏ –≤ –ø–æ—Ä—è–¥–∫–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏:\n"
        "[‚ô†Ô∏è, ‚ô£Ô∏è, ‚ô•Ô∏è, ‚ô¶Ô∏è, üçÄ, üßø, üëë, üîÆ, ‚öúÔ∏è, üé∞, üíé]\n\n"
        "<b>üé∞ - Wild</b> —Å–∏–º–≤–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å —Å–æ–±–æ–π –ª—é–±–æ–π –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö. "
        "–í —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —ç—Ç–æ–π –º–µ—Ö–∞–Ω–∏–∫–æ–π –æ–Ω –±—É–¥–µ—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å—Å—è –ø–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Ü–µ–Ω–µ "
        "<b>—Ç–æ–ª—å–∫–æ</b> –≤ –ª–∏–Ω–∏–∏ –∏–∑ 5 —ç–ª–µ–º–µ–Ω—Ç–æ–≤.\n\n"
        "<b>üíé - Bonus</b> —Å–∏–º–≤–æ–ª —Å–∞–º –ø–æ —Å–µ–±–µ –≤ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è—Ö –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç "
        "–∏ –Ω–µ –∏–º–µ–µ—Ç –Ω–∏–∫–∞–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏, "
        "–Ω–æ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–æ –≤—Å–µ–º—É –ø–æ–ª—é –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç <b>Bonus Game</b>:\n"
        "  ‚Ä¢ <b>—Ö3üíé</b> - —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤—ã–∏–≥—Ä—ã—à\n"
        "  ‚Ä¢ <b>—Ö4üíé</b> - Wild —Å—Ç–æ–ª–±—Ü—ã\n"
        "  ‚Ä¢ <b>—Ö5üíé</b> - \"–ª–∏–ø–∫–∏–π\" Wild\n\n"
        "–í —Å–ª—É—á–∞–µ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –±–∞–≥–æ–≤, –æ—à–∏–±–æ–∫ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –ø–∏—à–∏—Ç–µ <i>@ama_8800</i>.",
        parse_mode="HTML"
    )
